model:
  arch: video_llama
  model_type: mistral #pretrain_vicuna
  freeze_vit: True
  freeze_qformer: True

  low_resource: False
  #use_cache: True
  use_grad_checkpoint: True

  # Q-Former
  num_query_token: 32

  # If you want train models based on LLaMA-2-chat,
  # some ckpts could be download from our provided huggingface repo
  # i.e.  https://huggingface.co/DAMO-NLP-SG/Video-LLaMA-2-13B-Finetuned
  llama_model: "/mnt/g/llms/oogabooga_model/mistralai_Mistral-7B-Instruct-v0.1"
  imagebind_ckpt_path: "/mnt/g/videollama/imagebind/imagebind_huge.pth"

  # The ckpt of vision branch after stage1 pretrained, 
  #ckpt: "/mnt/g/videollama/Video-LLaMA-Series/finetune-vicuna7b-v2.pth"   # you can use our pretrained ckpt from https://huggingface.co/DAMO-NLP-SG/Video-LLaMA-2-13B-Pretrained/
  #ckpt: "/mnt/g/videollama_ckpts/output/videollama_stage2_finetune/20231204113/checkpoint_9.pth"
  #ckpt: '/mnt/g/videollama_ckpts/output/videollama_stage2_finetune/20231207181/checkpoint_9.pth'
  ckpt: '/mnt/g/videollama_ckpts/output/videollama_stage2_finetune/20231209233/checkpoint_44.pth'


  # only train vision branch
  equip_audio_branch: False  # whether equips the audio branch
  frozen_llama_proj: False
  frozen_video_Qformer: False
  frozen_audio_Qformer: True
  
  fusion_head_layers: 2
  max_frame_pos: 32
  fusion_header_type: "seqTransf"
  max_txt_len: 320

  # vicuna and llama_2_chat use different template !!!

  # for llama_2_chat:
  # end_sym: "</s>"
  # prompt_path: "prompts/alignment_image.txt"
  # prompt_template: '[INST] <<SYS>>\n \n<</SYS>>\n\n{} [/INST] '

  # for vicuna:
  end_sym: "###"
  prompt_path: "prompts/alignment_image.txt"
  prompt_template: '###Human: {} ###Assistant: '
  #use_clip_loss: True 
  clip_dim_size: 1024
  

datasets:    
  askyoutube_instruct:
    data_type: video
    build_info:
      anno_dir: /mnt/g/video_caption_dataset/*/*/data/captions/
      videos_dir: /mnt/g/video_caption_dataset/*/*/data/chunked_videos_30s/
    vis_processor:
      train:
        name: "alpro_video_train"
        n_frms: 6
        image_size: 224
    text_processor:
      train:
        name: "blip_caption"
    num_video_query_token: 32
    tokenizer_name: "/mnt/e/llms/oogabooga_model/vicuna-7bv1.1"
    model_type: "vicuna"  # need to set, as vicuna and llama_2_chat use different template
  webvid_instruct:
    data_type: video
    build_info:
      anno_dir: /mnt/g/videollama/datasets/videochat/videochat_instruct_11k.json
      videos_dir: /mnt/f/videollama/datasets/webvid/data/videos
    vis_processor:
      train:
        name: "alpro_video_train"
        n_frms: 6
        image_size: 224
    text_processor:
      train:
        name: "blip_caption"
    num_video_query_token: 32
    tokenizer_name: "/mnt/e/llms/oogabooga_model/vicuna-7bv1.1"
    model_type: "vicuna"  # need to set, as vicuna and llama_2_chat use different template
  videochatgpt_instruct:
    data_type: video
    build_info:
      anno_dir: /mnt/g/videollama/datasets/videochatgpt/processed_instruct.json
      videos_dir: /mnt/g/videollama/datasets/videochatgpt/videos
    vis_processor:
      train:
        name: "alpro_video_train"
        n_frms: 6
        image_size: 224
    text_processor:
      train:
        name: "blip_caption"
    num_video_query_token: 32
    tokenizer_name: "/mnt/e/llms/oogabooga_model/vicuna-7bv1.1"
    model_type: "vicuna"  # need to set, as vicuna and llama_2_chat use different template

 
    
run:
  task: video_text_pretrain
  # optimizer
  lr_sched: "linear_warmup_cosine_lr"
  init_lr: 3e-5
  min_lr: 1e-5
  warmup_lr: 1e-6

  weight_decay: 0.05
  max_epoch: 10
  iters_per_epoch: 1000
  batch_size_train: 1
  batch_size_eval: 1
  num_workers: 32
  warmup_steps: 1000

  seed: 42
  output_dir: "/mnt/g/videollama_ckpts/output/videollama_stage2_finetune_instruct/"

  amp: True
  #resume_ckpt_path: "/mnt/g/videollama_ckpts/output/videollama_stage2_finetune_instruct/20231202232/checkpoint_2.pth"
  #resume_ckpt_path: "/home/bhavashok/Video-LLaMA/video_llama/output/videollama_stage2_finetune/20231027044/checkpoint_4.pth"
  #resume_ckpt_path: "/home/bhavashok/Video-LLaMA/video_llama/output/videollama_stage2_finetune/20231023163/checkpoint_1.pth" #null
  #resume_ckpt_path: "/home/bhavashok/Video-LLaMA/video_llama/output/videollama_stage2_finetune/20231030154/checkpoint_2.pth"
  #resume_ckpt_path: "/home/bhavashok/Video-LLaMA/video_llama/output/videollama_stage2_finetune/20231031015/checkpoint_7.pth"
  #resume_ckpt_path: '/mnt/g/videollama_ckpts/output/videollama_stage2_finetune_instruct/20231208160/checkpoint_0.pth'

  evaluate: False 
  train_splits: ["train"]

  device: "cuda"
  world_size: 1
  dist_url: "env://"
  distributed: True
